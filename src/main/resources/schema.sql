CREATE TABLE gerne(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(40) NOT NULL CHECK (name IN ('Комедия','Драма','Мультфильм','Триллер','Документальный','Боевик'))
);
CREATE TABLE mpa(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(40) NOT NULL CHECK (name IN ('G','PG','PG-13','R','NC-17'))
);
CREATE TABLE friendship_status(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(40) NOT NULL CHECK (name IN ('подтвержден','не_подтвержден'))
);
CREATE TABLE films(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(40) NOT NULL,
description varchar(200) NOT NULL,
release_date date NOT NULL CHECK (release_date < '1895-12-28'),
duration INTEGER NOT NULL CHECK (duration > 0),
gerne_id INTEGER REFERENCES FOREIGN KEY gerne(id),
mpa_id INTEGER REFERENCES FOREIGN KEY mpa(id)
);
CREATE TABLE users(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(40) NOT NULL,
login varchar(40) NOT NULL CHECK(login <> ''),
email varchar(40) NOT NULL,
birthday date NOT NULL CHECK (birthday < CURRENT_DATE)
);
CREATE TABLE favorite_films(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INTEGER REFERENCES FOREIGN KEY films(id),
user_id INTEGER REFERENCES FOREIGN KEY users(id)
);
CREATE TABLE list_friends(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user_id INTEGER REFERENCES FOREIGN KEY users(id),
status_id INTEGER REFERENCES FOREIGN KEY friendship_status(id),
friend_id INTEGER REFERENCES FOREIGN KEY users(id)
);